name: Build Docker Image & Deploy to Render

on:
  push:
    branches:
      - "main"    # 当代码推送到 main 分支时触发
    tags:
      - 'v*.*.*'  # 当推送形如 v1.0.0, v1.2.3 等版本标签时触发
  workflow_dispatch: # 允许手动触发

jobs:
  build-and-push-main-latest: # 处理 main 分支的推送，打上 latest 标签
    # 仅当推送到 main 分支时运行此 job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build and Push Main Latest Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # 写入 GitHub Packages (ghcr.io) 的权限

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Main Latest Docker Image
        id: meta_main_latest
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/chain-subconverter
          tags: |
            type=raw,value=latest # main 分支的推送打上 'latest' 标签
          # type=sha,prefix=main-,format=short # 也为每个 main 构建打上 'main-<short-sha>'

      - name: Build and push Main Latest Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta_main_latest.outputs.tags }}
          labels: ${{ steps.meta_main_latest.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-versioned-and-dev-latest-for-render: # 处理版本标签的推送
    # 仅当推送版本标签 (v*.*.*) 时运行此 job
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    name: Build Versioned Image (and dev-latest) & Deploy to Render
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # 写入 GitHub Packages (ghcr.io) 的权限

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Versioned & Dev-Latest Docker Image
        id: meta_versioned_dev_latest
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/chain-subconverter
          tags: |
            type=semver,pattern={{version}} # 例如 Git 标签 v1.0.0 -> Docker 标签 1.0.0
            type=raw,value=dev-latest      # 将这个版本标签也同时标记为 'dev-latest'，用于Render部署
          flavor: | # 添加或修改 flavor 配置
            latest=false # 明确禁用自动添加 latest 标签

      - name: Build and push Versioned & Dev-Latest Docker image
        id: build_image_for_render
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta_versioned_dev_latest.outputs.tags }}
          labels: ${{ steps.meta_versioned_dev_latest.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger Render Deploy
        if: success() && steps.build_image_for_render.outputs.digest # 仅在镜像构建并推送成功时运行
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        # 确保 Render 服务配置为拉取 ghcr.io/${{ github.repository_owner }}/chain-subconverter:dev-latest